#!/bin/bash

if [ -z "$1" ]; then
        echo "Usage: ./change-gdm-wallpaper <path/to/picture.png>"
        exit 1
fi

if [ ! -f $1 ]; then
        echo Error: could not find file $1
        exit 1
fi

PIC=$1
WORKDIR=${HOME}/change-gdm-wallpaper-tmp
DATE=$(date +"%Y-%m-%d_%T")

if [ ! -d $WORKDIR ]; then
        mkdir -p $WORKDIR/theme
fi

cd "${WORKDIR}/theme"
mkdir -p backups

IFS='/' read -r -a array <<< "$PIC"
cp $PIC .
PIC=${array[-1]}
chmod 777 $PIC

SHARE=/usr/share/gnome-shell/
GRESOURCE=gnome-shell-theme.gresource
CSS=gnome-shell.css
XMLRES=gnome-shell-theme.gresource.xml

echo Backing up ${SHARE}${GRESOURCE}...
cp ${SHARE}${GRESOURCE} "backups/${GRESOURCE}.bak.${DATE}"
cp ${SHARE}${GRESOURCE} $GRESOURCE
printf "Unpacking binary resource..."
for r in `gresource list ${SHARE}${GRESOURCE}`; do
        r=${r#\/org\/gnome\/shell/}
        if [ ! -d $WORKDIR/${r%/*} ]; then
                mkdir -p $WORKDIR/${r%/*}
        fi
done

for r in `gresource list ${SHARE}${GRESOURCE}`; do
        printf "."
        gresource extract ${SHARE}${GRESOURCE} $r >$WORKDIR/${r#\/org\/gnome\/shell/}
done
echo

echo "creating ${XMLRES}..."

cat <<EOT > ${XMLRES}
<?xml version="1.0" encoding="UTF-8"?>
<gresources>
  <gresource prefix="/org/gnome/shell/theme">
    <file>calendar-today.svg</file>
    <file>checkbox-focused.svg</file>
    <file>checkbox-off-focused.svg</file>
    <file>checkbox-off.svg</file>
    <file>checkbox.svg</file>
    <file>workspace-placeholder.svg</file>
    <file>gnome-shell.css</file>
    <file>gnome-shell-high-contrast.css</file>
    <file>icons/scalable/status/eye-not-looking-symbolic.svg</file>
    <file>icons/scalable/status/eye-open-negative-filled-symbolic.svg</file>
    <file>icons/scalable/status/message-indicator-symbolic.svg</file>
    <file>icons/scalable/status/keyboard-enter-symbolic.svg</file>
    <file>icons/scalable/status/keyboard-hide-symbolic.svg</file>
    <file>icons/scalable/status/keyboard-layout-filled-symbolic.svg</file>
    <file>icons/scalable/status/keyboard-shift-filled-symbolic.svg</file>
    <file>icons/scalable/status/keyboard-caps-lock-filled-symbolic.svg</file>
    <file>icons/scalable/actions/color-pick.svg</file>
    <file>icons/scalable/actions/pointer-double-click-symbolic.svg</file>
    <file>icons/scalable/actions/pointer-drag-symbolic.svg</file>
    <file>icons/scalable/actions/pointer-primary-click-symbolic.svg</file>
    <file>icons/scalable/actions/pointer-secondary-click-symbolic.svg</file>
    <file>no-events.svg</file>
    <file>no-notifications.svg</file>
    <file>pad-osd.css</file>
    <file>process-working.svg</file>
    <file>toggle-off-dark.svg</file>
    <file>toggle-off-hc.svg</file>
    <file>toggle-off.svg</file>
    <file>toggle-on-dark.svg</file>
    <file>toggle-on-hc.svg</file>
    <file>toggle-on.svg</file>
    <file>${PIC}</file>
  </gresource>
</gresources>
EOT

WORKDIR="${WORKDIR}/theme/"

if [ -f $CSS ]; then
        echo Backing up $CSS...
        cp $CSS "backups/${CSS}.bak.${DATE}"
        sed -i 's/#lockDialogGroup/#lockDialogGroup-old/' $CSS
        printf "#lockDialogGroup {\n    background: #2e3436 url(${PIC});\n    background-repeat: no-repeat;\n    background-size: cover; }\n" >> $CSS

        # change blue accent colour to nice pink
        sed -i 's/#1b6acb/#f981b6/g' $CSS
        sed -i 's/#1c6fd4/#f56898/g' $CSS
        sed -i 's/#629fea/#f56898/g' $CSS
        sed -i 's/rgba(188, 214, 246, 0.3)/rgba(249, 129, 182, 0.3)/g' $CSS
else
        echo Error: could not find file $CSS
        exit 1
fi

echo 'Edit any file now before installation then hit ENTER to continue...'
read

echo Compiling binary resources...
glib-compile-resources $XMLRES
echo Copying binary resources over to ${SHARE}...
sudo cp $GRESOURCE "${SHARE}${GRESOURCE}"
sudo cp $CSS "${SHARE}${CSS}"

echo Restart to load your changes.